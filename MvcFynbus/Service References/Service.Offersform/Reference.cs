//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcFynbus.Service.Offersform {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.Offersform.IOffersform_SingleVehicle")]
    public interface IOffersform_SingleVehicle {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewBasicInformation", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewBasicInformationResponse")]
        int NewBasicInformation(string token, string name, int cvr, string nameAlt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewBasicInformation", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewBasicInformationResponse")]
        System.Threading.Tasks.Task<int> NewBasicInformationAsync(string token, string name, int cvr, string nameAlt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewWagone", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewWagoneResponse")]
        int NewWagone(string token, System.Nullable<int> wagonGuaranteeId, string registrationLetters, int registrationNumbers, int phoneNumber, byte vehicleType, System.Nullable<byte> stairMachine, System.Nullable<byte> highchairs, System.Nullable<int> homeWagon, int owneBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewWagone", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewWagoneResponse")]
        System.Threading.Tasks.Task<int> NewWagoneAsync(string token, System.Nullable<int> wagonGuaranteeId, string registrationLetters, int registrationNumbers, int phoneNumber, byte vehicleType, System.Nullable<byte> stairMachine, System.Nullable<byte> highchairs, System.Nullable<int> homeWagon, int owneBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewHomeWagon", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewHomeWagonResponse")]
        int NewHomeWagon(string token, string streetName, short streetNumber, short zipCode, string city, string municipality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewHomeWagon", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewHomeWagonResponse")]
        System.Threading.Tasks.Task<int> NewHomeWagonAsync(string token, string streetName, short streetNumber, short zipCode, string city, string municipality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewPrice", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewPriceResponse")]
        int NewPrice(string token, int WeekdaysID, int WeekdaysEveningID, int WeekendersHelligdageID, decimal StairMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewPrice", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewPriceResponse")]
        System.Threading.Tasks.Task<int> NewPriceAsync(string token, int WeekdaysID, int WeekdaysEveningID, int WeekendersHelligdageID, decimal StairMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewPricePlan", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewPricePlanResponse")]
        int NewPricePlan(string token, decimal setUpFee, decimal hourlyRate, decimal hourlydDoenTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewPricePlan", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewPricePlanResponse")]
        System.Threading.Tasks.Task<int> NewPricePlanAsync(string token, decimal setUpFee, decimal hourlyRate, decimal hourlydDoenTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewOffersform_SingleVehicle", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewOffersform_SingleVehicleResponse")]
        int NewOffersform_SingleVehicle(string token, int basicInformationID, int wagonDetailsID, int priceID, string addInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/NewOffersform_SingleVehicle", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/NewOffersform_SingleVehicleResponse")]
        System.Threading.Tasks.Task<int> NewOffersform_SingleVehicleAsync(string token, int basicInformationID, int wagonDetailsID, int priceID, string addInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateBasicInfo", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateBasicInfoResponse")]
        bool UpdateBasicInfo(string token, string name, int cvr, string altName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateBasicInfo", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateBasicInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateBasicInfoAsync(string token, string name, int cvr, string altName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateOfferFrom", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateOfferFromResponse")]
        bool UpdateOfferFrom(string token, int id, string addInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateOfferFrom", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateOfferFromResponse")]
        System.Threading.Tasks.Task<bool> UpdateOfferFromAsync(string token, int id, string addInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateUser", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateUserResponse")]
        bool UpdateUser(string pass, string user, string newPass, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateUser", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(string pass, string user, string newPass, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateWagonDetail", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateWagonDetailResponse")]
        bool UpdateWagonDetail(string token, int id, System.Nullable<int> guarantee, string registrationLetters, System.Nullable<int> registrationNumbers, int phoneNumber, string streetName, short streetNumber, short zipCode, string city, string municipality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/UpdateWagonDetail", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/UpdateWagonDetailResponse")]
        System.Threading.Tasks.Task<bool> UpdateWagonDetailAsync(string token, int id, System.Nullable<int> guarantee, string registrationLetters, System.Nullable<int> registrationNumbers, int phoneNumber, string streetName, short streetNumber, short zipCode, string city, string municipality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetUserInfo", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetUserInfoResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object GetUserInfo(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetUserInfo", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetUserInfoResponse")]
        System.Threading.Tasks.Task<object> GetUserInfoAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetBasicInformation", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetBasicInformationResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object GetBasicInformation(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetBasicInformation", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetBasicInformationResponse")]
        System.Threading.Tasks.Task<object> GetBasicInformationAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetOffersforms", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetOffersformsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] GetOffersforms(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOffersform_SingleVehicle/GetOffersforms", ReplyAction="http://tempuri.org/IOffersform_SingleVehicle/GetOffersformsResponse")]
        System.Threading.Tasks.Task<object[]> GetOffersformsAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOffersform_SingleVehicleChannel : MvcFynbus.Service.Offersform.IOffersform_SingleVehicle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Offersform_SingleVehicleClient : System.ServiceModel.ClientBase<MvcFynbus.Service.Offersform.IOffersform_SingleVehicle>, MvcFynbus.Service.Offersform.IOffersform_SingleVehicle {
        
        public Offersform_SingleVehicleClient() {
        }
        
        public Offersform_SingleVehicleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Offersform_SingleVehicleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Offersform_SingleVehicleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Offersform_SingleVehicleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int NewBasicInformation(string token, string name, int cvr, string nameAlt) {
            return base.Channel.NewBasicInformation(token, name, cvr, nameAlt);
        }
        
        public System.Threading.Tasks.Task<int> NewBasicInformationAsync(string token, string name, int cvr, string nameAlt) {
            return base.Channel.NewBasicInformationAsync(token, name, cvr, nameAlt);
        }
        
        public int NewWagone(string token, System.Nullable<int> wagonGuaranteeId, string registrationLetters, int registrationNumbers, int phoneNumber, byte vehicleType, System.Nullable<byte> stairMachine, System.Nullable<byte> highchairs, System.Nullable<int> homeWagon, int owneBy) {
            return base.Channel.NewWagone(token, wagonGuaranteeId, registrationLetters, registrationNumbers, phoneNumber, vehicleType, stairMachine, highchairs, homeWagon, owneBy);
        }
        
        public System.Threading.Tasks.Task<int> NewWagoneAsync(string token, System.Nullable<int> wagonGuaranteeId, string registrationLetters, int registrationNumbers, int phoneNumber, byte vehicleType, System.Nullable<byte> stairMachine, System.Nullable<byte> highchairs, System.Nullable<int> homeWagon, int owneBy) {
            return base.Channel.NewWagoneAsync(token, wagonGuaranteeId, registrationLetters, registrationNumbers, phoneNumber, vehicleType, stairMachine, highchairs, homeWagon, owneBy);
        }
        
        public int NewHomeWagon(string token, string streetName, short streetNumber, short zipCode, string city, string municipality) {
            return base.Channel.NewHomeWagon(token, streetName, streetNumber, zipCode, city, municipality);
        }
        
        public System.Threading.Tasks.Task<int> NewHomeWagonAsync(string token, string streetName, short streetNumber, short zipCode, string city, string municipality) {
            return base.Channel.NewHomeWagonAsync(token, streetName, streetNumber, zipCode, city, municipality);
        }
        
        public int NewPrice(string token, int WeekdaysID, int WeekdaysEveningID, int WeekendersHelligdageID, decimal StairMachine) {
            return base.Channel.NewPrice(token, WeekdaysID, WeekdaysEveningID, WeekendersHelligdageID, StairMachine);
        }
        
        public System.Threading.Tasks.Task<int> NewPriceAsync(string token, int WeekdaysID, int WeekdaysEveningID, int WeekendersHelligdageID, decimal StairMachine) {
            return base.Channel.NewPriceAsync(token, WeekdaysID, WeekdaysEveningID, WeekendersHelligdageID, StairMachine);
        }
        
        public int NewPricePlan(string token, decimal setUpFee, decimal hourlyRate, decimal hourlydDoenTime) {
            return base.Channel.NewPricePlan(token, setUpFee, hourlyRate, hourlydDoenTime);
        }
        
        public System.Threading.Tasks.Task<int> NewPricePlanAsync(string token, decimal setUpFee, decimal hourlyRate, decimal hourlydDoenTime) {
            return base.Channel.NewPricePlanAsync(token, setUpFee, hourlyRate, hourlydDoenTime);
        }
        
        public int NewOffersform_SingleVehicle(string token, int basicInformationID, int wagonDetailsID, int priceID, string addInfo) {
            return base.Channel.NewOffersform_SingleVehicle(token, basicInformationID, wagonDetailsID, priceID, addInfo);
        }
        
        public System.Threading.Tasks.Task<int> NewOffersform_SingleVehicleAsync(string token, int basicInformationID, int wagonDetailsID, int priceID, string addInfo) {
            return base.Channel.NewOffersform_SingleVehicleAsync(token, basicInformationID, wagonDetailsID, priceID, addInfo);
        }
        
        public bool UpdateBasicInfo(string token, string name, int cvr, string altName) {
            return base.Channel.UpdateBasicInfo(token, name, cvr, altName);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBasicInfoAsync(string token, string name, int cvr, string altName) {
            return base.Channel.UpdateBasicInfoAsync(token, name, cvr, altName);
        }
        
        public bool UpdateOfferFrom(string token, int id, string addInfo) {
            return base.Channel.UpdateOfferFrom(token, id, addInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOfferFromAsync(string token, int id, string addInfo) {
            return base.Channel.UpdateOfferFromAsync(token, id, addInfo);
        }
        
        public bool UpdateUser(string pass, string user, string newPass, string newEmail) {
            return base.Channel.UpdateUser(pass, user, newPass, newEmail);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(string pass, string user, string newPass, string newEmail) {
            return base.Channel.UpdateUserAsync(pass, user, newPass, newEmail);
        }
        
        public bool UpdateWagonDetail(string token, int id, System.Nullable<int> guarantee, string registrationLetters, System.Nullable<int> registrationNumbers, int phoneNumber, string streetName, short streetNumber, short zipCode, string city, string municipality) {
            return base.Channel.UpdateWagonDetail(token, id, guarantee, registrationLetters, registrationNumbers, phoneNumber, streetName, streetNumber, zipCode, city, municipality);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateWagonDetailAsync(string token, int id, System.Nullable<int> guarantee, string registrationLetters, System.Nullable<int> registrationNumbers, int phoneNumber, string streetName, short streetNumber, short zipCode, string city, string municipality) {
            return base.Channel.UpdateWagonDetailAsync(token, id, guarantee, registrationLetters, registrationNumbers, phoneNumber, streetName, streetNumber, zipCode, city, municipality);
        }
        
        public object GetUserInfo(string token) {
            return base.Channel.GetUserInfo(token);
        }
        
        public System.Threading.Tasks.Task<object> GetUserInfoAsync(string token) {
            return base.Channel.GetUserInfoAsync(token);
        }
        
        public object GetBasicInformation(string token) {
            return base.Channel.GetBasicInformation(token);
        }
        
        public System.Threading.Tasks.Task<object> GetBasicInformationAsync(string token) {
            return base.Channel.GetBasicInformationAsync(token);
        }
        
        public object[] GetOffersforms(string token) {
            return base.Channel.GetOffersforms(token);
        }
        
        public System.Threading.Tasks.Task<object[]> GetOffersformsAsync(string token) {
            return base.Channel.GetOffersformsAsync(token);
        }
    }
}

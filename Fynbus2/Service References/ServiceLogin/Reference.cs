//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fynbus2.ServiceLogin {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceLogin.ILogin")]
    public interface ILogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LoginServices", ReplyAction="http://tempuri.org/ILogin/LoginServicesResponse")]
        string LoginServices(string acc, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LoginServices", ReplyAction="http://tempuri.org/ILogin/LoginServicesResponse")]
        System.Threading.Tasks.Task<string> LoginServicesAsync(string acc, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/ValidateToken", ReplyAction="http://tempuri.org/ILogin/ValidateTokenResponse")]
        bool ValidateToken(string token, string acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/ValidateToken", ReplyAction="http://tempuri.org/ILogin/ValidateTokenResponse")]
        System.Threading.Tasks.Task<bool> ValidateTokenAsync(string token, string acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/CreatedAccount", ReplyAction="http://tempuri.org/ILogin/CreatedAccountResponse")]
        bool CreatedAccount(string accName, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/CreatedAccount", ReplyAction="http://tempuri.org/ILogin/CreatedAccountResponse")]
        System.Threading.Tasks.Task<bool> CreatedAccountAsync(string accName, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/ValidateAccNewName", ReplyAction="http://tempuri.org/ILogin/ValidateAccNewNameResponse")]
        bool ValidateAccNewName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/ValidateAccNewName", ReplyAction="http://tempuri.org/ILogin/ValidateAccNewNameResponse")]
        System.Threading.Tasks.Task<bool> ValidateAccNewNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginChannel : Fynbus2.ServiceLogin.ILogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginClient : System.ServiceModel.ClientBase<Fynbus2.ServiceLogin.ILogin>, Fynbus2.ServiceLogin.ILogin {
        
        public LoginClient() {
        }
        
        public LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string LoginServices(string acc, string password) {
            return base.Channel.LoginServices(acc, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginServicesAsync(string acc, string password) {
            return base.Channel.LoginServicesAsync(acc, password);
        }
        
        public bool ValidateToken(string token, string acc) {
            return base.Channel.ValidateToken(token, acc);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateTokenAsync(string token, string acc) {
            return base.Channel.ValidateTokenAsync(token, acc);
        }
        
        public bool CreatedAccount(string accName, string password, string email) {
            return base.Channel.CreatedAccount(accName, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> CreatedAccountAsync(string accName, string password, string email) {
            return base.Channel.CreatedAccountAsync(accName, password, email);
        }
        
        public bool ValidateAccNewName(string name) {
            return base.Channel.ValidateAccNewName(name);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAccNewNameAsync(string name) {
            return base.Channel.ValidateAccNewNameAsync(name);
        }
    }
}
